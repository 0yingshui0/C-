#include <stdio.h>


int main()
////  结构体                     //  ——描述复杂对象  ——自行创造的一种类型
//struct Book
//{
//	char name [20];
//	short price;
//};
//
//int main()
//{
//	//利用结构体类型-创建一个该类型的结构体变量
//    struct Book b1 = { "C语言程序设计",55 };
//	//利用pb打印出书名和价格
//	struct Book* pb = &b1;
//	// . 结构体变量. 成员
//	// -> 结构体变量->成员
//
//	printf("书名：%s\n", pb->name);
//	printf("价格：%d\n", pb->price);
//
//	printf("书名：%s\n", (*pb).name);
//	printf("价格：%d\n", (*pb).price);
//
//	//	printf("书名：%s\n", b1.name);
//	//printf("价格：%d\n",b1.price);
//	//b1.price = 20;
//	//printf("打折后价格：%d\n", b1.price);
//
//	return 0;
//}



{
	double d = 3.14;
	double* pd = &d;
	printf("%d\n", sizeof(pd));   //32位——4字节，64位——8字节
	*pd = 6.18;
	printf("%lf\n",d);
	printf("%lf\n", *pd);


	int a = 10;               //申请了4个字节的空间
	printf("%p\n", &a);
	int *p = &a;              //p——是一个变量——指针变量
	*p = 20;                 //  *——解引用操作符/间接引用操作符
	printf("%p\n", &a);

	return 0;
}

////static的用法
//int sum(int a)
//{
//	int c = 0;
//	static int b = 3;                       //syatic ——延长局部变量生命周期
//	c += 1;
//	b += 2;         
//	return(a + b + c);
//}
//int main()
//{
//	int i = 0;
//	int a = 2;
//	for (i = 0; i < 5; i++)
//	{
//		printf("%d\n", sum(a));
//	}
//	return 0;
//}
